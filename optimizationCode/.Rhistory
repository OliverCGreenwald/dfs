# lineups$total[1] <- 243 # sanity check
for (i in 1:nrow(lineups)) {
lineups$place[i] <- which.min(abs(full.results.data$Points-lineups$total[i])) # not precise but good estimate (can be done better probably)
if (lineups$place[i] > payout.data$Place_hi[nrow(payout.data)]) {
lineups$payout[i] <- 0
}
else {
for (j in 1:nrow(payout.data)) {
if (lineups$place[i] >= payout.data$Place_lo[j] && lineups$place[i] <= payout.data$Place_hi[j]) {
lineups$payout[i] <- payout.data$Payout[j]
break
}
}
}
}
######## FUNCTION FOR CALCULATING TOTAL PNL OF LINEUPS ########
# won't be exact b/c not accounting for ties
calculatePnL <- function(numberEntries, lineups) {
lineups <- lineups[1:numberEntries,]
return(sum(lineups$payout) - as.numeric(substring(contest.entry.fee, 2)) * nrow(lineups))
}
######## ADD TO PNL MATRIX ########
paste0("Total PnL: ", sum(lineups$payout) - as.numeric(substring(contest.entry.fee, 2)) * nrow(lineups))
pnlMatrix[k, 'PnL'] <- sum(lineups$payout) - as.numeric(substring(contest.entry.fee, 2)) * nrow(lineups)
######## PNL VS NUMBER OF LINEUPS ########
pnls <- rep(0,nrow(lineups))
for (i in 1:length(pnls)) {
pnls[i] <- calculatePnL(nrow(lineups)-i+1, lineups)
}
numLineups <- seq(from = nrow(lineups), to = nrow(lineups)-length(pnls)+1)
plot(numLineups, pnls, xlab="Number of Lineups", ylab="PnL", type = "l")
abline(h=0, col = "red")
}
print(pnlMatrix)
saveRDS(pnlMatrix, file = paste0("../resultsAnalysis/data_warehouse/testing_lineups/formulation_pnl/pnlMatrix_week", week.num, predictions.source, "_formulation", formulation, "_exposure_", exposure, ".rds"))
#setwd("~/Projects/DFS/resultsAnalysis")
#setwd("~/Documents/PrincetonFall16/fantasyfootball/DFS/resultsAnalysis")
####### VIEW RESULTS #########
# load("../resultsAnalysis/data_warehouse/testing_lineups/RData_files/pnlMatrix_week3_dfn_formulation2_exposure_1.RData")
# load("../resultsAnalysis/data_warehouse/testing_lineups/RData_files/pnlMatrix_week3_dfn_formulation3_exposure_1.RData")
# load("../resultsAnalysis/data_warehouse/testing_lineups/RData_files/pnlMatrix_week2_dfn_formulation2_exposure_1.RData")
# load("../resultsAnalysis/data_warehouse/testing_lineups/RData_files/pnlMatrix_week2_dfn_formulation3_exposure_1.RData")
####### SET PARAMETER VALUES #########
week.lo <- 2
week.hi <- 2
contest.entry.fee <- "$20"
predictions.source <- "_dfn" # Either "_dfn" or ""
formulation <- 2
overlap.lo <- 4
overlap.hi <- 4
exposure <- 1
####### INITALIZE PNL MATRIX FOR STORING RESULTS #########
pnlMatrix <- matrix(data = NA, nrow = 9, ncol = 2, dimnames = list(NULL, c("Overlap","PnL")))
pnlMatrix[1:9,'Overlap'] <- 1:9
# Loop through weeks
for (week.num in week.lo:week.hi) {
####### LOAD FULL CONTEST RESULTS #########
file.name <- paste0("data_warehouse/contest_results/", contest.entry.fee, "_contest_full_results_week", week.num, ".csv")
full.results.data <- read.csv(file = file.name, stringsAsFactors = F)
####### IMPORT AND CLEAN DK HISTORICAL FPTS DATA #########
file.name <- paste0("data_warehouse/player_weekly_performance/draftkings_player_production_week", week.num, ".csv")
player.performance <- read.csv(file = file.name, stringsAsFactors = F)
player.performance$Actual.Score[is.na(player.performance$Actual.Score)] <- 0
player.performance$Player <- sub(' Sr.','', player.performance$Player)
player.performance$Player <- sub(' Jr.','', player.performance$Player)
######## IMPORT PAYOUT STRUCTURE ########
file.name <- paste0("data_warehouse/weekly_payout_structure/", contest.entry.fee, "_payout_structure_week", week.num, ".csv")
payout.data <- read.csv(file = file.name, stringsAsFactors = F)
######## LOOP THROUGH OVERLAP PARAMETER VALUES ########
for (k in overlap.lo:overlap.hi) {
####### LOAD LINEUPS FOR THIS SET OF PARAMETERS #########
file.name <- paste0("../resultsAnalysis/data_warehouse/testing_lineups/week", week.num, predictions.source, "_formulation", formulation, "_overlap_", k, "_exposure_", exposure, ".csv")
lineups <- read.csv(file = file.name, stringsAsFactors = F)
######## CALCULATE FPTS FOR EACH LINEUP ########
for (i in 1:ncol(lineups)) {
lineups[,i] <- substr(lineups[,i], 1, regexpr('\\(', lineups[,i]) - 2)
lineups[,i] <- sub(' Sr.','', lineups[,i])
lineups[,i] <- sub(' Jr.','', lineups[,i])
}
lineups[,ncol(lineups)] <- substr(lineups[,ncol(lineups)], 1, nchar(lineups[,ncol(lineups)])-1)
total_results <- player.performance[,c('Player', 'Actual.Score')]
lineups$total <- 0
for (index in 1:nrow(lineups)){
row <- t(lineups[index,])
colnames(row) <- 'Player'
row <- merge(row, total_results, by = 'Player')
lineups$total[index] <- sum(row$Actual.Score)
}
plot(lineups$total, main = paste0("Week ", week.num, ", Overlap ", k), xlab = "Lineup Index", ylab = "Lineup FPts")
######## CALCULATE PLACE AND PAYOUT FOR EACH LINEUP ########
# print(paste0("Number of NAs: ", sum(is.na(lineups$total))))
# lineups$total[1] <- 243 # sanity check
for (i in 1:nrow(lineups)) {
lineups$place[i] <- which.min(abs(full.results.data$Points-lineups$total[i])) # not precise but good estimate (can be done better probably)
if (lineups$place[i] > payout.data$Place_hi[nrow(payout.data)]) {
lineups$payout[i] <- 0
}
else {
for (j in 1:nrow(payout.data)) {
if (lineups$place[i] >= payout.data$Place_lo[j] && lineups$place[i] <= payout.data$Place_hi[j]) {
lineups$payout[i] <- payout.data$Payout[j]
break
}
}
}
}
######## FUNCTION FOR CALCULATING TOTAL PNL OF LINEUPS ########
# won't be exact b/c not accounting for ties
calculatePnL <- function(numberEntries, lineups) {
lineups <- lineups[1:numberEntries,]
return(sum(lineups$payout) - as.numeric(substring(contest.entry.fee, 2)) * nrow(lineups))
}
######## ADD TO PNL MATRIX ########
paste0("Total PnL: ", sum(lineups$payout) - as.numeric(substring(contest.entry.fee, 2)) * nrow(lineups))
pnlMatrix[k, 'PnL'] <- sum(lineups$payout) - as.numeric(substring(contest.entry.fee, 2)) * nrow(lineups)
######## PNL VS NUMBER OF LINEUPS ########
pnls <- rep(0,nrow(lineups))
for (i in 1:length(pnls)) {
pnls[i] <- calculatePnL(nrow(lineups)-i+1, lineups)
}
numLineups <- seq(from = nrow(lineups), to = nrow(lineups)-length(pnls)+1)
plot(numLineups, pnls, xlab="Number of Lineups", ylab="PnL", type = "l")
abline(h=0, col = "red")
}
print(pnlMatrix)
saveRDS(pnlMatrix, file = paste0("../resultsAnalysis/data_warehouse/testing_lineups/formulation_pnl/pnlMatrix_week", week.num, predictions.source, "_formulation", formulation, "_exposure_", exposure, ".rds"))
}
View(lineups)
setwd("~/Projects/DFS/optimizationCode")
#setwd("~/Projects/DFS/optimizationCode")
#setwd("~/Documents/PrincetonFall16/fantasyfootball/DFS/optimizationCode")
#--------- Set week number automation purposes ---------#
week.num <- ceiling((as.numeric(Sys.Date()) - as.numeric(as.Date("2016-09-11")))/7 + 1)
#--------- Get RG projections (csv format) ---------#
# create offense csv
qb.data <- read.csv(file = "https://rotogrinders.com/projected-stats/nfl-qb.csv?site=draftkings", stringsAsFactors = F, header = F)
colnames(qb.data) <- qb.data[nrow(qb.data),]
qb.data <- qb.data[-nrow(qb.data),]
flex.data <- read.csv(file = "https://rotogrinders.com/projected-stats/nfl-flex.csv?site=draftkings", stringsAsFactors = F, header = F)
colnames(flex.data) <- flex.data[nrow(flex.data),]
flex.data <- flex.data[-nrow(flex.data),]
off.data <- rbind(qb.data, flex.data)
file.name <- paste0("data_warehouse/rotogrinders/roto_offense_week", week.num, ".csv")
write.csv(off.data, file = file.name, row.names = F)
# create defense csv
def.data <- read.csv(file = "https://rotogrinders.com/projected-stats/nfl-defense.csv?site=draftkings", stringsAsFactors = F, header = F)
colnames(def.data) <- def.data[nrow(def.data),]
def.data <- def.data[-nrow(def.data),]
file.name <- paste0("data_warehouse/rotogrinders/roto_defense_week", week.num, ".csv")
write.csv(def.data, file = file.name, row.names = F)
#--------- Clean DK salaries data ---------#
file.name <- paste0("data_warehouse/draftkings/DKSalaries_week", week.num, ".csv")
data <- read.csv(file = file.name, stringsAsFactors = F)
data["FirstName"] <- ""
data["LastName"] <- ""
data["Opponent"] <- ""
#data["HomeTeam"] <- ""
#data["AwayTeam"] <- ""
#colnames(data)[5] <- "Projection"
colnames(data)[7] <- "Team"
for (i in 1:nrow(data)) {
gameInfo <- data[i, "GameInfo"]
name <- data[i, "Name"]
AwayTeam <- substr(gameInfo, 1, regexpr('@', gameInfo) - 1)
#data[i, "AwayTeam"] <- AwayTeam
HomeTeam <- substr(gameInfo, regexpr('@', gameInfo) + 1, regexpr(' ', gameInfo) - 1)
#data[i, "HomeTeam"] <- HomeTeam
FirstName <- substr(name, 1, regexpr(' ', name) - 1)
data[i, "FirstName"] <- FirstName
LastName <- substr(name, regexpr(' ', name) + 1, nchar(name))
LastName <- sub(' Sr.', '', LastName)
LastName <- sub(' Jr.', '', LastName)
data[i, "LastName"] <- LastName
if(AwayTeam == (data[i, "Team"])) {
data[i, "Opponent"] <- HomeTeam
} else {
data[i, "Opponent"] <- AwayTeam
}
}
#write.csv(data, file = 'draftkings/cleaned_DKSalaries.csv')
#Create inputs for Julia Optimization
offensive_players <- subset(data, Position != "DST")
#offensive_players <- offensive_players[,c("FirstName", "LastName", "Salary", "Position", "Team", "Opponent", "Projection")]
defense <- subset(data, Position == "DST")
#defense <- defense[,c("FirstName", "Salary", "Team", "Opponent", "Projection")]
colnames(defense)[1] <- "Name"
# uncomment if you'd like to use DraftKings predictions not RotoGrinders predictions
#write.csv(offensive_players, file = 'data_warehouse/offensive_players.csv', row.names = FALSE)
#write.csv(defense, file = 'data_warehouse/defenses.csv', row.names = FALSE)
#--------- Replace DK offensive player predictions with RG predictions ---------#
# read in data
dk.offense.data <- offensive_players
file.name <- paste0("data_warehouse/rotogrinders/roto_offense_week", week.num, ".csv")
roto.offense.data <- read.csv(file = file.name, header = T, stringsAsFactors = F)
# compare dk and roto data
nrow(dk.offense.data[dk.offense.data$Projection>0,])
nrow(roto.offense.data[roto.offense.data$fpts>0,])
# split roto names into first and last name columns
#library(stringr)
#first.last.name <- str_split_fixed(roto.offense.data$player, " ", 2)
#colnames(first.last.name) <- c("FirstName", "LastName")
#roto.offense.data <- cbind(first.last.name, roto.offense.data[,2:ncol(roto.offense.data)])
# combine dk first and last names
dk.offense.data$FullName <- paste(dk.offense.data$FirstName, dk.offense.data$LastName)
# replace dk projections with roto projections
dk.offense.data$RotoProjection <- roto.offense.data$fpts[match(paste(dk.offense.data$FullName,dk.offense.data$Position), paste(roto.offense.data$player,roto.offense.data$pos))]
dk.offense.data$RotoProjection[is.na(dk.offense.data$RotoProjection)] <- 0
dk.offense.data$Projection <- dk.offense.data$RotoProjection
dk.offense.data$RotoProjection <- NULL
#--------- Add Daily Fantasy Nerd Projections ---------#
file.name <- paste0("data_warehouse/dailyfantasynerd/dfn_offense_week", week.num, ".csv")
if(file.exists(file.name)) {
dfn_offense <- read.csv(file = file.name, header = T, stringsAsFactors = F)
dfn_offense$Player.Name <- sub(' Sr.', '', dfn_offense$Player.Name)
dfn_offense$Player.Name <- sub(' Jr.', '', dfn_offense$Player.Name)
dfn_offense <- dfn_offense[,c('Player.Name','Proj.FP', 'Pos')]
colnames(dfn_offense) <- c('Name', 'Projection_dfn', 'Position')
#dk.offense.data <- merge(dk.offense.data, dfn_offense, by.x = 'Name')
dk.offense.data$Projection_dfn <- dfn_offense$Projection_dfn[match(paste(dk.offense.data$FullName,dk.offense.data$Position), paste(dfn_offense$Name,dfn_offense$Position))]
dk.offense.data$Projection_dfn[is.na(dk.offense.data$Projection_dfn)] <- 0
dk.offense.data$FullName <- NULL
}
# write to file
write.csv(dk.offense.data, file = 'data_warehouse/offensive_players.csv', row.names = F) # input in julia code
#--------- Replace DK defensive player predictions with RG predictions ---------#
# read in data
dk.defense.data <- defense
file.name <- paste0("data_warehouse/rotogrinders/roto_defense_week", week.num, ".csv")
roto.defense.data <- read.csv(file = file.name, header = T, stringsAsFactors = F)
# reconcile team name differences
team.names.data <- read.csv("data_warehouse/rotogrinders/team_names.csv", header = T, stringsAsFactors = F)
dk.defense.data$roto_name <- team.names.data$roto_name[match(dk.defense.data$Team, team.names.data$dk_name)]
dk.defense.data$RotoProjection <- roto.defense.data$fpts[match(dk.defense.data$roto_name, roto.defense.data$team)]
dk.defense.data$Projection <- dk.defense.data$RotoProjection
dk.defense.data$RotoProjection <- NULL
dk.defense.data$roto_name <- NULL
colnames(dk.defense.data)[1] <- 'Position'
#--------- Add Daily Fantasy Nerd Projections ---------#
file.name <- paste0("data_warehouse/dailyfantasynerd/dfn_defense_week", week.num, ".csv")
if(file.exists(file.name)) {
dfn_defense <- read.csv(file = file.name, header = T, stringsAsFactors = F)
dfn_defense$Player.Name <- substr(dfn_defense$Player.Name, regexpr(" [^ ]*$", dfn_defense$Player.Name) + 1, nchar(dfn_defense$Player.Name))
dfn_defense$Player.Name <- paste(dfn_defense$Player.Name, ' ', sep='')
dfn_defense <- dfn_defense[,c('Player.Name','Proj.FP')]
colnames(dfn_defense) <- c('Name', 'Projection_dfn')
# merge
dk.defense.data$Projection_dfn <- dfn_defense$Projection_dfn[match(dk.defense.data$Name, dfn_defense$Name)]
}
# write to file
write.csv(dk.defense.data, file = 'data_warehouse/defenses.csv', row.names = F) # input in julia code
setwd("~/Projects/DFS/optimizationCode")
#setwd("~/Documents/PrincetonFall16/fantasyfootball/DFS/optimizationCode")
data <- read.csv("output.csv", stringsAsFactors = F, header = F)
occurences<-sort(table(unlist(data)), decreasing=T)
exposure<- occurences / nrow(data)
exposure
setwd("~/Projects/DFS/optimizationCode")
#setwd("~/Projects/DFS/optimizationCode")
#setwd("~/Documents/PrincetonFall16/fantasyfootball/DFS/optimizationCode")
#--------- Set week number automation purposes ---------#
week.num <- ceiling((as.numeric(Sys.Date()) - as.numeric(as.Date("2016-09-11")))/7 + 1)
#--------- Get RG projections (csv format) ---------#
# create offense csv
qb.data <- read.csv(file = "https://rotogrinders.com/projected-stats/nfl-qb.csv?site=draftkings", stringsAsFactors = F, header = F)
colnames(qb.data) <- qb.data[nrow(qb.data),]
qb.data <- qb.data[-nrow(qb.data),]
flex.data <- read.csv(file = "https://rotogrinders.com/projected-stats/nfl-flex.csv?site=draftkings", stringsAsFactors = F, header = F)
colnames(flex.data) <- flex.data[nrow(flex.data),]
flex.data <- flex.data[-nrow(flex.data),]
off.data <- rbind(qb.data, flex.data)
file.name <- paste0("data_warehouse/rotogrinders/roto_offense_week", week.num, ".csv")
write.csv(off.data, file = file.name, row.names = F)
# create defense csv
def.data <- read.csv(file = "https://rotogrinders.com/projected-stats/nfl-defense.csv?site=draftkings", stringsAsFactors = F, header = F)
colnames(def.data) <- def.data[nrow(def.data),]
def.data <- def.data[-nrow(def.data),]
file.name <- paste0("data_warehouse/rotogrinders/roto_defense_week", week.num, ".csv")
write.csv(def.data, file = file.name, row.names = F)
#--------- Clean DK salaries data ---------#
file.name <- paste0("data_warehouse/draftkings/DKSalaries_week", week.num, ".csv")
data <- read.csv(file = file.name, stringsAsFactors = F)
data["FirstName"] <- ""
data["LastName"] <- ""
data["Opponent"] <- ""
#data["HomeTeam"] <- ""
#data["AwayTeam"] <- ""
#colnames(data)[5] <- "Projection"
colnames(data)[7] <- "Team"
for (i in 1:nrow(data)) {
gameInfo <- data[i, "GameInfo"]
name <- data[i, "Name"]
AwayTeam <- substr(gameInfo, 1, regexpr('@', gameInfo) - 1)
#data[i, "AwayTeam"] <- AwayTeam
HomeTeam <- substr(gameInfo, regexpr('@', gameInfo) + 1, regexpr(' ', gameInfo) - 1)
#data[i, "HomeTeam"] <- HomeTeam
FirstName <- substr(name, 1, regexpr(' ', name) - 1)
data[i, "FirstName"] <- FirstName
LastName <- substr(name, regexpr(' ', name) + 1, nchar(name))
LastName <- sub(' Sr.', '', LastName)
LastName <- sub(' Jr.', '', LastName)
data[i, "LastName"] <- LastName
if(AwayTeam == (data[i, "Team"])) {
data[i, "Opponent"] <- HomeTeam
} else {
data[i, "Opponent"] <- AwayTeam
}
}
#write.csv(data, file = 'draftkings/cleaned_DKSalaries.csv')
#Create inputs for Julia Optimization
offensive_players <- subset(data, Position != "DST")
#offensive_players <- offensive_players[,c("FirstName", "LastName", "Salary", "Position", "Team", "Opponent", "Projection")]
defense <- subset(data, Position == "DST")
#defense <- defense[,c("FirstName", "Salary", "Team", "Opponent", "Projection")]
colnames(defense)[1] <- "Name"
# uncomment if you'd like to use DraftKings predictions not RotoGrinders predictions
#write.csv(offensive_players, file = 'data_warehouse/offensive_players.csv', row.names = FALSE)
#write.csv(defense, file = 'data_warehouse/defenses.csv', row.names = FALSE)
#--------- Replace DK offensive player predictions with RG predictions ---------#
# read in data
dk.offense.data <- offensive_players
file.name <- paste0("data_warehouse/rotogrinders/roto_offense_week", week.num, ".csv")
roto.offense.data <- read.csv(file = file.name, header = T, stringsAsFactors = F)
# compare dk and roto data
nrow(dk.offense.data[dk.offense.data$Projection>0,])
nrow(roto.offense.data[roto.offense.data$fpts>0,])
# split roto names into first and last name columns
#library(stringr)
#first.last.name <- str_split_fixed(roto.offense.data$player, " ", 2)
#colnames(first.last.name) <- c("FirstName", "LastName")
#roto.offense.data <- cbind(first.last.name, roto.offense.data[,2:ncol(roto.offense.data)])
# combine dk first and last names
dk.offense.data$FullName <- paste(dk.offense.data$FirstName, dk.offense.data$LastName)
# replace dk projections with roto projections
dk.offense.data$RotoProjection <- roto.offense.data$fpts[match(paste(dk.offense.data$FullName,dk.offense.data$Position), paste(roto.offense.data$player,roto.offense.data$pos))]
dk.offense.data$RotoProjection[is.na(dk.offense.data$RotoProjection)] <- 0
dk.offense.data$Projection <- dk.offense.data$RotoProjection
dk.offense.data$RotoProjection <- NULL
#--------- Add Daily Fantasy Nerd Projections ---------#
file.name <- paste0("data_warehouse/dailyfantasynerd/dfn_offense_week", week.num, ".csv")
if(file.exists(file.name)) {
dfn_offense <- read.csv(file = file.name, header = T, stringsAsFactors = F)
dfn_offense$Player.Name <- sub(' Sr.', '', dfn_offense$Player.Name)
dfn_offense$Player.Name <- sub(' Jr.', '', dfn_offense$Player.Name)
dfn_offense <- dfn_offense[,c('Player.Name','Proj.FP', 'Pos')]
colnames(dfn_offense) <- c('Name', 'Projection_dfn', 'Position')
#dk.offense.data <- merge(dk.offense.data, dfn_offense, by.x = 'Name')
dk.offense.data$Projection_dfn <- dfn_offense$Projection_dfn[match(paste(dk.offense.data$FullName,dk.offense.data$Position), paste(dfn_offense$Name,dfn_offense$Position))]
dk.offense.data$Projection_dfn[is.na(dk.offense.data$Projection_dfn)] <- 0
dk.offense.data$FullName <- NULL
}
# write to file
write.csv(dk.offense.data, file = 'data_warehouse/offensive_players.csv', row.names = F) # input in julia code
#--------- Replace DK defensive player predictions with RG predictions ---------#
# read in data
dk.defense.data <- defense
file.name <- paste0("data_warehouse/rotogrinders/roto_defense_week", week.num, ".csv")
roto.defense.data <- read.csv(file = file.name, header = T, stringsAsFactors = F)
# reconcile team name differences
team.names.data <- read.csv("data_warehouse/rotogrinders/team_names.csv", header = T, stringsAsFactors = F)
dk.defense.data$roto_name <- team.names.data$roto_name[match(dk.defense.data$Team, team.names.data$dk_name)]
dk.defense.data$RotoProjection <- roto.defense.data$fpts[match(dk.defense.data$roto_name, roto.defense.data$team)]
dk.defense.data$Projection <- dk.defense.data$RotoProjection
dk.defense.data$RotoProjection <- NULL
dk.defense.data$roto_name <- NULL
colnames(dk.defense.data)[1] <- 'Position'
#--------- Add Daily Fantasy Nerd Projections ---------#
file.name <- paste0("data_warehouse/dailyfantasynerd/dfn_defense_week", week.num, ".csv")
if(file.exists(file.name)) {
dfn_defense <- read.csv(file = file.name, header = T, stringsAsFactors = F)
dfn_defense$Player.Name <- substr(dfn_defense$Player.Name, regexpr(" [^ ]*$", dfn_defense$Player.Name) + 1, nchar(dfn_defense$Player.Name))
dfn_defense$Player.Name <- paste(dfn_defense$Player.Name, ' ', sep='')
dfn_defense <- dfn_defense[,c('Player.Name','Proj.FP')]
colnames(dfn_defense) <- c('Name', 'Projection_dfn')
# merge
dk.defense.data$Projection_dfn <- dfn_defense$Projection_dfn[match(dk.defense.data$Name, dfn_defense$Name)]
}
# write to file
write.csv(dk.defense.data, file = 'data_warehouse/defenses.csv', row.names = F) # input in julia code
setwd("~/Projects/DFS/optimizationCode")
#setwd("~/Projects/DFS/optimizationCode")
#setwd("~/Documents/PrincetonFall16/fantasyfootball/DFS/optimizationCode")
#--------- Set week number automation purposes ---------#
week.num <- ceiling((as.numeric(Sys.Date()) - as.numeric(as.Date("2016-09-11")))/7 + 1)
#--------- Get RG projections (csv format) ---------#
# create offense csv
qb.data <- read.csv(file = "https://rotogrinders.com/projected-stats/nfl-qb.csv?site=draftkings", stringsAsFactors = F, header = F)
colnames(qb.data) <- qb.data[nrow(qb.data),]
qb.data <- qb.data[-nrow(qb.data),]
flex.data <- read.csv(file = "https://rotogrinders.com/projected-stats/nfl-flex.csv?site=draftkings", stringsAsFactors = F, header = F)
colnames(flex.data) <- flex.data[nrow(flex.data),]
flex.data <- flex.data[-nrow(flex.data),]
off.data <- rbind(qb.data, flex.data)
file.name <- paste0("data_warehouse/rotogrinders/roto_offense_week", week.num, ".csv")
write.csv(off.data, file = file.name, row.names = F)
# create defense csv
def.data <- read.csv(file = "https://rotogrinders.com/projected-stats/nfl-defense.csv?site=draftkings", stringsAsFactors = F, header = F)
colnames(def.data) <- def.data[nrow(def.data),]
def.data <- def.data[-nrow(def.data),]
file.name <- paste0("data_warehouse/rotogrinders/roto_defense_week", week.num, ".csv")
write.csv(def.data, file = file.name, row.names = F)
#--------- Clean DK salaries data ---------#
file.name <- paste0("data_warehouse/draftkings/DKSalaries_week", week.num, ".csv")
data <- read.csv(file = file.name, stringsAsFactors = F)
data["FirstName"] <- ""
data["LastName"] <- ""
data["Opponent"] <- ""
#data["HomeTeam"] <- ""
#data["AwayTeam"] <- ""
#colnames(data)[5] <- "Projection"
colnames(data)[7] <- "Team"
for (i in 1:nrow(data)) {
gameInfo <- data[i, "GameInfo"]
name <- data[i, "Name"]
AwayTeam <- substr(gameInfo, 1, regexpr('@', gameInfo) - 1)
#data[i, "AwayTeam"] <- AwayTeam
HomeTeam <- substr(gameInfo, regexpr('@', gameInfo) + 1, regexpr(' ', gameInfo) - 1)
#data[i, "HomeTeam"] <- HomeTeam
FirstName <- substr(name, 1, regexpr(' ', name) - 1)
data[i, "FirstName"] <- FirstName
LastName <- substr(name, regexpr(' ', name) + 1, nchar(name))
LastName <- sub(' Sr.', '', LastName)
LastName <- sub(' Jr.', '', LastName)
data[i, "LastName"] <- LastName
if(AwayTeam == (data[i, "Team"])) {
data[i, "Opponent"] <- HomeTeam
} else {
data[i, "Opponent"] <- AwayTeam
}
}
#write.csv(data, file = 'draftkings/cleaned_DKSalaries.csv')
#Create inputs for Julia Optimization
offensive_players <- subset(data, Position != "DST")
#offensive_players <- offensive_players[,c("FirstName", "LastName", "Salary", "Position", "Team", "Opponent", "Projection")]
defense <- subset(data, Position == "DST")
#defense <- defense[,c("FirstName", "Salary", "Team", "Opponent", "Projection")]
colnames(defense)[1] <- "Name"
# uncomment if you'd like to use DraftKings predictions not RotoGrinders predictions
#write.csv(offensive_players, file = 'data_warehouse/offensive_players.csv', row.names = FALSE)
#write.csv(defense, file = 'data_warehouse/defenses.csv', row.names = FALSE)
#--------- Replace DK offensive player predictions with RG predictions ---------#
# read in data
dk.offense.data <- offensive_players
file.name <- paste0("data_warehouse/rotogrinders/roto_offense_week", week.num, ".csv")
roto.offense.data <- read.csv(file = file.name, header = T, stringsAsFactors = F)
# compare dk and roto data
nrow(dk.offense.data[dk.offense.data$Projection>0,])
nrow(roto.offense.data[roto.offense.data$fpts>0,])
# split roto names into first and last name columns
#library(stringr)
#first.last.name <- str_split_fixed(roto.offense.data$player, " ", 2)
#colnames(first.last.name) <- c("FirstName", "LastName")
#roto.offense.data <- cbind(first.last.name, roto.offense.data[,2:ncol(roto.offense.data)])
# combine dk first and last names
dk.offense.data$FullName <- paste(dk.offense.data$FirstName, dk.offense.data$LastName)
# replace dk projections with roto projections
dk.offense.data$RotoProjection <- roto.offense.data$fpts[match(paste(dk.offense.data$FullName,dk.offense.data$Position), paste(roto.offense.data$player,roto.offense.data$pos))]
dk.offense.data$RotoProjection[is.na(dk.offense.data$RotoProjection)] <- 0
dk.offense.data$Projection <- dk.offense.data$RotoProjection
dk.offense.data$RotoProjection <- NULL
#--------- Add Daily Fantasy Nerd Projections ---------#
file.name <- paste0("data_warehouse/dailyfantasynerd/dfn_offense_week", week.num, ".csv")
if(file.exists(file.name)) {
dfn_offense <- read.csv(file = file.name, header = T, stringsAsFactors = F)
dfn_offense$Player.Name <- sub(' Sr.', '', dfn_offense$Player.Name)
dfn_offense$Player.Name <- sub(' Jr.', '', dfn_offense$Player.Name)
dfn_offense <- dfn_offense[,c('Player.Name','Proj.FP', 'Pos')]
colnames(dfn_offense) <- c('Name', 'Projection_dfn', 'Position')
#dk.offense.data <- merge(dk.offense.data, dfn_offense, by.x = 'Name')
dk.offense.data$Projection_dfn <- dfn_offense$Projection_dfn[match(paste(dk.offense.data$FullName,dk.offense.data$Position), paste(dfn_offense$Name,dfn_offense$Position))]
dk.offense.data$Projection_dfn[is.na(dk.offense.data$Projection_dfn)] <- 0
dk.offense.data$FullName <- NULL
}
# write to file
write.csv(dk.offense.data, file = 'data_warehouse/offensive_players.csv', row.names = F) # input in julia code
#--------- Replace DK defensive player predictions with RG predictions ---------#
# read in data
dk.defense.data <- defense
file.name <- paste0("data_warehouse/rotogrinders/roto_defense_week", week.num, ".csv")
roto.defense.data <- read.csv(file = file.name, header = T, stringsAsFactors = F)
# reconcile team name differences
team.names.data <- read.csv("data_warehouse/rotogrinders/team_names.csv", header = T, stringsAsFactors = F)
dk.defense.data$roto_name <- team.names.data$roto_name[match(dk.defense.data$Team, team.names.data$dk_name)]
dk.defense.data$RotoProjection <- roto.defense.data$fpts[match(dk.defense.data$roto_name, roto.defense.data$team)]
dk.defense.data$Projection <- dk.defense.data$RotoProjection
dk.defense.data$RotoProjection <- NULL
dk.defense.data$roto_name <- NULL
colnames(dk.defense.data)[1] <- 'Position'
#--------- Add Daily Fantasy Nerd Projections ---------#
file.name <- paste0("data_warehouse/dailyfantasynerd/dfn_defense_week", week.num, ".csv")
if(file.exists(file.name)) {
dfn_defense <- read.csv(file = file.name, header = T, stringsAsFactors = F)
dfn_defense$Player.Name <- substr(dfn_defense$Player.Name, regexpr(" [^ ]*$", dfn_defense$Player.Name) + 1, nchar(dfn_defense$Player.Name))
dfn_defense$Player.Name <- paste(dfn_defense$Player.Name, ' ', sep='')
dfn_defense <- dfn_defense[,c('Player.Name','Proj.FP')]
colnames(dfn_defense) <- c('Name', 'Projection_dfn')
# merge
dk.defense.data$Projection_dfn <- dfn_defense$Projection_dfn[match(dk.defense.data$Name, dfn_defense$Name)]
}
# write to file
write.csv(dk.defense.data, file = 'data_warehouse/defenses.csv', row.names = F) # input in julia code
setwd("~/Projects/DFS/optimizationCode")
#setwd("~/Documents/PrincetonFall16/fantasyfootball/DFS/optimizationCode")
data <- read.csv("output.csv", stringsAsFactors = F, header = T)
occurences<-sort(table(unlist(data)), decreasing=T)
exposure<- occurences / nrow(data)
exposure
setwd("~/Projects/DFS/optimizationCode")
#setwd("~/Documents/PrincetonFall16/fantasyfootball/DFS/optimizationCode")
data <- read.csv("output.csv", stringsAsFactors = F, header = T)
occurences<-sort(table(unlist(data)), decreasing=T)
exposure<- occurences / nrow(data)
exposure
